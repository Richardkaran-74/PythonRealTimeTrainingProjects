#---Global variable---

#Creating Board
board = ["_","_","_",
         "_","_","_",
         "_","_","_",]

#game is still going
game_still_going = True

#win or tie?
winner = None

#who turn is it?
current_player = "X"

def play_game():

  #display empty board
  display_board()

  #The game is still going
  while game_still_going:

    #handle a turn of arbitary player
    handle_turn(current_player)

    #check the game has ended
    check_if_game_over()

    #turn the player
    flip_player()

  if winner == "X" or winner == "O":
    print(winner + " won.")
  elif winner == None:
    print("Tie")

# Display the game board to the screen
def display_board():
  print("\n")
  print(board[0] + " | " + board[1] + " | " + board[2] + "     1 | 2 | 3")
  print(board[3] + " | " + board[4] + " | " + board[5] + "     4 | 5 | 6")
  print(board[6] + " | " + board[7] + " | " + board[8] + "     7 | 8 | 9")
  print("\n")

#handle turn of an arbitary player
def handle_turn(player):

  print(player + "'s turn.'")
  position = input('Choose a position form 1-9:')

  valid = False
  while not valid:

    while position not in ["1","2","3","4","5","6","7","8","9"]:
      position = input("choose a position from 1-9: ")

    position = int(position) - 1

    if board[position] == "_":
      valid = True
    else:
      print("You can't go there. Go again.")

  board[position] = player

  display_board()

def check_if_game_over():
  check_if_win()
  check_if_tie()

def check_if_win():
  #set up for global variable
  global winner
  #check rows
  row_winner = check_rows()
  #check complumns
  column_winner = check_columns()
  #check diagonals
  diagonal_winner = check_diagonals()
  #Get the winner
  if row_winner:
    winner = row_winner
  elif column_winner:
    winner = column_winner
  elif diagonal_winner:
    winner = diagonal_winner
  else:
    winner = None

def check_rows():
  # set up global variable
  global game_still_going
  #check if  any of the rows have same value
  row_1 = board[0] == board[1] == board[2] != "_"
  row_2 = board[3] == board[4] == board[5] != "_"
  row_3 = board[6] == board[7] == board[8] != "_"
  #if any row have does match , flag a win
  if row_1 or row_2 or row_3:
      game_still_going = False
  #return the winner X or O
  if row_1:
    return board[0]
  elif row_2:
    return board[3]
  elif row_3:
    return board[6]
  else:
    return None

def check_columns():
  # set up global variable
  global game_still_going
  #check if  any of the rows have same value
  column_1 = board[0] == board[3] == board[6] != "_"
  column_2 = board[1] == board[4] == board[7] != "_"
  column_3 = board[2] == board[5] == board[8] != "_"
  #if any column have does match , flag a win
  if column_1 or column_2 or column_3:
    game_still_going = False
  #return the winner X or O
  if column_1:
    return board[0]
  elif column_2:
    return board[1]
  elif column_3:
    return board[2]
  else:
    return None

def check_diagonals():
  # set up global variable
  global game_still_going
  #check if  any of the diagonal have same value
  diagonal_1 = board[0] == board[4] == board[8] != "_"
  diagonal_2 = board[2] == board[4] == board[6] != "_"
  #if any diagonal have does match , flag a win
  if diagonal_1 or diagonal_2:
    game_still_going = False
  #return the winner X or O
  if diagonal_1:
    return board[0]
  elif diagonal_2:
    return board[2]
  else:
    return None

def check_if_tie():
  #global varible need
  global game_still_going
  if "_" not in board:
    game_still_going = False
    return True
  else:
    return False

def flip_player():
  #global variable we need
  global current_player
  #if the current player is x , change to o 
  if current_player == "X":
      current_player = "O"
  #if the current player is o, change to x
  elif current_player == "O":
      current_player = "X"

play_game()
